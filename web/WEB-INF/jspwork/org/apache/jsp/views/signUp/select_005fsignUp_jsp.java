/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.49
 * Generated at: 2018-04-20 01:32:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.signUp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class select_005fsignUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>푸딩 회원가입 선택</title>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/food/resources/css/top-menu.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/food/resources/css/foot.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/food/resources/css/location.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/food/resources/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 상단 네비게이션 바 -->\r\n");
      out.write("\t<div class=\"navcl\">\r\n");
      out.write("\t\t<nav class=\"navbar navbar-inverse\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"collapse navbar-collapse\" id=\"myNavbar\" style=\"padding-left: 0px;\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"nav navbar-nav\" >\r\n");
      out.write("\t\t\t\t\t<li style=\"margin-right:10px;\"><a class=\"navbar-brand\" href=\"/food/index.jsp \">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"/food/resources/images/LOGO_fooding.png\" style=\"width:65px; height:30px; \">\r\n");
      out.write("\t\t\t\t\t\t</a></li>\r\n");
      out.write("\t\t\t\t\t<li ><a href=\"/food/index.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"/food/slocation\">지역검색</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"/food/flist\">푸드트럭</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"/food/fes_show\">축제검색</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"/food/views/logIn/logIn.jsp\"><span\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"active\"><a href=\"/food/views/signUp/select_signUp.jsp\"><span\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-edit\"></span> 회원가입</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<div align=\"center\" style=\"width: 510px; margin-left: 34%; margin-top: 60px; text-align: center;\">\r\n");
      out.write("\t\t<a href=\"\"><img alt=\"(로고)\" style=\"width: 40%; height: 40%;\" src=\"/food/resources/images/logo (1).png\"> </a>\r\n");
      out.write("\t\t<hr style=\"border: 0.5px solid #DCDCDC;\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<h2 style=\"text-align: left; margin-bottom: 30px;\">\r\n");
      out.write("\t\t\t<font style=\"vertical-align: bottom; margin-right: 28%;\">회원가입</font> <br>\r\n");
      out.write("\t\t</h2>\r\n");
      out.write("\t\t<h5 style=\"text-align: left;\">가입 유형을 선택해 주세요.</h5>\r\n");
      out.write("\t\t<h5 style=\"text-align: left; margin-bottom: 50px;\">회원 가입 후 푸딩에서 제공하는 다양한 서비스를 제공 받으세요.</h5>\r\n");
      out.write("\t\t<p style=\"float: left; border: 1px solid #DCDCDC; width: 240px; height: 223px; margin-right: 1%;\">\r\n");
      out.write("\t\t\t<a href=\"/food/views/signUp/signUp.jsp\"><img style=\"width: 237px; height: 219px; padding: 0\" alt=\"\" src=\"/food/resources/images/normal.png\"></a>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<p style=\"float: right; border: 1px solid #DCDCDC; width: 240px; height: 223px;\">\r\n");
      out.write("\t\t\t<a href=\"/food/views/signUp/business_Signup.jsp\"><img style=\"width: 237px; height: 219px; padding-top: 0\" alt=\"\" src=\"/food/resources/images/business.png\"></a>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
