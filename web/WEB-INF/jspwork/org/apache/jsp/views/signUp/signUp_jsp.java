/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.49
 * Generated at: 2018-04-20 01:37:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.signUp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

	if (request.getAttribute("message") != null) {

      out.write("\n");
      out.write("<script>\n");
      out.write("\tvar message = '");
      out.print(request.getAttribute("message"));
      out.write("' + \" \";\n");
      out.write("\talert(message);\n");
      out.write("</script>\n");
      out.write("\n");

	request.removeAttribute("message");
	} else {

      out.write('\n');

	}

      out.write('\n');
      out.write('\n');

	Boolean checkVCode = true; //default false/ 이메일 인증시 true전환 //테스트용으로 default true

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<title>푸딩 일반회원가입</title>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/food/resources/css/top-menu.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/food/resources/css/foot.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/food/resources/css/location.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/food/resources/css/bootstrap.min.css\">\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".text_line {\n");
      out.write("\twidth: 400px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("\tsrc=\"/food/resources/js/jquery-3.3.1.min.js\"></script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tvar idCheck = Number(1);\n");
      out.write("\tvar vcodeCheck = Number(1);\n");
      out.write("\tvar vcode = null;\n");
      out.write("\tvar vmail;\n");
      out.write("\n");
      out.write("\tfunction checkId() {\n");
      out.write("\n");
      out.write("\t\tvar inputCheck = $('#userId').val();\n");
      out.write("\t\tvar pat = /[A-Za-z0-9]{4,10}/;\n");
      out.write("\n");
      out.write("\t\tif ($('#userId').val().length > 0) {\n");
      out.write("\n");
      out.write("\t\t\tif (!(pat.test(inputCheck))) {\n");
      out.write("\t\t\t\talert(\"4~10자리 영문 또는 숫자만 입력하십시오\");\n");
      out.write("\t\t\t\t$('#userId').val(\"\");\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl : \"/food/midcheck\",\n");
      out.write("\t\t\t\t\tdata : {\n");
      out.write("\t\t\t\t\t\t\"userId\" : $('#userId').val()\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\ttype : \"post\",\n");
      out.write("\t\t\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\t\tidCheck = Number(data);\n");
      out.write("\t\t\t\t\t\tif (idCheck == 1) {\n");
      out.write("\t\t\t\t\t\t\talert(\"아이디가 중복되었습니다. 다시 입력해주세요.\");\n");
      out.write("\t\t\t\t\t\t\t$('#userId').val(\"\");\n");
      out.write("\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\talert('사용가능한 아이디입니다 .');\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction dupliMail() {\n");
      out.write("\n");
      out.write("\t\t$.ajax({\n");
      out.write("\n");
      out.write("\t\t\turl : \"/food/memmaildupli\",\n");
      out.write("\t\t\ttype : \"post\",\n");
      out.write("\t\t\tdata : {\n");
      out.write("\t\t\t\tcusMail : $('#email').val()\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\tif(data==1)\n");
      out.write("\t\t\t\t\t\t{\n");
      out.write("\t\t\t\t\t\talert(\"메일이 중복되었습니다.\");\n");
      out.write("\t\t\t\t\t\t$('#email').val(\"\");\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\telse\n");
      out.write("\t\t\t\t\t\t{\n");
      out.write("\t\t\t\t\t\tsendMail();\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction sendMail() {//이메일 인증코드 발송  \n");
      out.write("\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\turl : \"/food/sendmail\",\n");
      out.write("\t\t\tdata : {\n");
      out.write("\t\t\t\temail : $('#email').val()\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\ttype : \"post\",\n");
      out.write("\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\tvcode = Number(data);\n");
      out.write("\t\t\t\talert(\"인증번호를 전송하였습니다. 메일을 확인해주세요.\");\n");
      out.write("\t\t\t\tvmail = $('#email').val();\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\terror : function() {\n");
      out.write("\t\t\t\talert(\"인증번호 전송에 실패했습니다. 메일주소를 확인해주세요.\");\n");
      out.write("\t\t\t\t$('#email').val(\"\");\n");
      out.write("\t\t\t\tvmail = \"\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction vCodeCheck() {\n");
      out.write("\n");
      out.write("\t\tif (vmail == $('#email').val()) {\n");
      out.write("\n");
      out.write("\t\t\tif (vcode == $('#vCode').val()) {\n");
      out.write("\t\t\t\talert('인증완료');\n");
      out.write("\t\t\t\tvcodeCheck = 0;\n");
      out.write("\t\t\t\t$('[name=email]').val($('#email').val());\n");
      out.write("\t\t\t\t$('#email').attr('disabled', 'disabled');\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\talert('인증번호를 확인해주세요.');\n");
      out.write("\t\t\t\tvcodeCheck = 1;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\talert(\"이메일이 변경되었습니다. 인증번호를 다시 발송하세요.\");\n");
      out.write("\t\t\t$('#vCode').val(\"\");\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction checkPwd() {\n");
      out.write("\t\t//비밀번호 확인\n");
      out.write("\t\tif ($('#upwd1').val() != $('#upwd2').val() && $('#upwd1').val() != null) {\n");
      out.write("\t\t\talert('암호와 암호확인 값이 일치하지 않습니다.\\n' + '다시 입력하십시오.');\n");
      out.write("\t\t\t$('#upwd2').val(\"\");\n");
      out.write("\t\t}\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<!-- 상단 네비게이션 바 -->\n");
      out.write("\t<div class=\"navcl\">\n");
      out.write("\t\t<nav class=\"navbar navbar-inverse\">\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"collapse navbar-collapse\" id=\"myNavbar\"\n");
      out.write("\t\t\t\tstyle=\"padding-left: 0px;\">\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav\">\n");
      out.write("\t\t\t\t\t<li style=\"margin-right: 10px;\"><a class=\"navbar-brand\"\n");
      out.write("\t\t\t\t\t\thref=\"/food/index.jsp \"> <img\n");
      out.write("\t\t\t\t\t\t\tsrc=\"/food/resources/images/LOGO_fooding.png\"\n");
      out.write("\t\t\t\t\t\t\tstyle=\"width: 65px; height: 30px;\">\n");
      out.write("\t\t\t\t\t</a></li>\n");
      out.write("\t\t\t\t\t<li><a href=\"/food/index.jsp\">Home</a></li>\n");
      out.write("\t\t\t\t\t<li><a href=\"/food/slocation\">지역검색</a></li>\n");
      out.write("\t\t\t\t\t<li><a href=\"/food/flist\">푸드트럭</a></li>\n");
      out.write("\t\t\t\t\t<li><a href=\"/food/fes_show\">축제검색</a></li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t\t\t\t\t<li><a href=\"/food/views/logIn/logIn.jsp\"><span\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"active\"><a href=\"/food/views/signUp/select_signUp.jsp\"><span\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-edit\"></span> 회원가입</a></li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</nav>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<!-- 회원가입 화면구성 -->\n");
      out.write("\t<h3\n");
      out.write("\t\tstyle=\"text-align: center; margin-right: 50px; margin-bottom: 50px; margin-top: 50px;\">회원가입</h3>\n");
      out.write("\t<form action=\"/food/csenroll.pwenc\" method=\"post\">\n");
      out.write("\t\t<table align=\"center\" cellspacing=\"20px\">\n");
      out.write("\t\t\t<input type=\"submit\" id=\"sub1\" hidden=\"hidden\">\n");
      out.write("\t\t\t<!-- 아이디 입력란 -->\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td><i class=\"glyphicon glyphicon-user\"></i></td>\n");
      out.write("\t\t\t\t<td><input id=\"userId\" name=\"userId\" class=\"text_line\"\n");
      out.write("\t\t\t\t\ttype=\"text\" placeholder=\"아이디 : 4~10자리 영문 또는 숫자로 작성하십시오\"\n");
      out.write("\t\t\t\t\trequired=\"required\" onblur=\"checkId();\" maxlength=\"10\"\n");
      out.write("\t\t\t\t\tpattern=\"[A-Za-z0-9]{4,10}\" title=\"4~10자리 영문 또는 숫자로 작성하십시오\"></td>\n");
      out.write("\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<!-- 패스워드 입력란 -->\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td><i class=\"glyphicon glyphicon-lock\"></i></td>\n");
      out.write("\t\t\t\t<td><input id=\"upwd1\" name=\"userPwd\" class=\"text_line\"\n");
      out.write("\t\t\t\t\ttype=\"password\" placeholder=\"비밀번호\" required=\"required\"\n");
      out.write("\t\t\t\t\tmaxlength=\"20\" pattern=\"^(?=.*[a-zA-Z])((?=.*\\d)|(?=.*\\W)).{6,20}$\"\n");
      out.write("\t\t\t\t\ttitle=\"6~20자리의 최소 1개이상의 숫자 또는 특수문자를 사용하세요(대소문자 구별)\"\n");
      out.write("\t\t\t\t\tplaceholder=\"비밀번호 : 6~20자리의 최소 1개이상의 숫자 또는 특수문자를 사용하세요(대소문자 구별)\"></td>\n");
      out.write("\t\t\t\t<td></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<!-- 패스워드 확인 입력란 -->\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td><i class=\"glyphicon glyphicon-lock\"></i></td>\n");
      out.write("\t\t\t\t<td><input id=\"upwd2\" onblur=\"checkPwd();\" class=\"text_line\"\n");
      out.write("\t\t\t\t\ttype=\"password\" placeholder=\"비밀번호 확인\" required=\"required\"\n");
      out.write("\t\t\t\t\tmaxlength=\"20\"></td>\n");
      out.write("\t\t\t\t<td></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<!-- 이름 입력란 -->\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td><i class=\"glyphicon glyphicon-user\"></i></td>\n");
      out.write("\t\t\t\t<td><input id=\"userName\" class=\"text_line\" type=\"text\"\n");
      out.write("\t\t\t\t\tplaceholder=\"이름\" name=\"userName\" required=\"required\" maxlength=\"10\"\n");
      out.write("\t\t\t\t\tpattern=\"^[\\uac00-\\ud7af\\s]{1,4}[\\uac00-\\ud7af]$\" title=\"10자리 이하 한글만 입력가능합니다\"></td>\n");
      out.write("\t\t\t\t<td></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<!-- 이메일 입력란 -->\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td><i class=\"glyphicon glyphicon-user\"></i></td>\n");
      out.write("\t\t\t\t<td><input id=\"email\" class=\"text_line\" type=\"email\"\n");
      out.write("\t\t\t\t\tplaceholder=\"이메일\"  required=\"required\"><input type=\"hidden\" name=\"email\" value=\"\"></td>\n");
      out.write("\t\t\t\t<td><input type=\"button\" value=\"인증번호 발송\" onclick=\"dupliMail();\"\n");
      out.write("\t\t\t\t\trequired=\"required\"></td>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<!-- 인증번호 입력란 -->\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td><i class=\"glyphicon glyphicon-user\"></i></td>\n");
      out.write("\t\t\t\t<td><input id=\"vCode\" class=\"text_line\" type=\"text\"\n");
      out.write("\t\t\t\t\tplaceholder=\"인증번호\" required=\"required\"></td>\n");
      out.write("\t\t\t\t<td><input type=\"button\" value=\"인증\" onclick=\"vCodeCheck();\"\n");
      out.write("\t\t\t\t\trequired=\"required\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\n");
      out.write("\t\t\t<!-- 가입하기 버튼 -->\n");
      out.write("\t\t\t<!-- 이메일 인증시 checkVCode->true 시키고 -->\n");
      out.write("\t\t\t<tr align=\"center\">\n");
      out.write("\t\t\t\t<td></td>\n");
      out.write("\t\t\t\t<td><input type=\"button\" value=\"가입하기\" onclick=\"checkForm();\">\n");
      out.write("\t\t\t\t\t<script type=\"text/javascript\">\n");
      out.write("\t\t\t\t\t\tfunction checkForm() {\n");
      out.write("\t\t\t\t\t\t\tif (vcodeCheck != 1 && idCheck != 1) {\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t$('#sub1').click();\n");
      out.write("\t\t\t\t\t\t\t} else if (vcodeCheck == 1) {\n");
      out.write("\t\t\t\t\t\t\t\talert(\"이메일 미인증 상태입니다.\");\n");
      out.write("\t\t\t\t\t\t\t} else if (idCheck == 1) {\n");
      out.write("\t\t\t\t\t\t\t\talert(\"아이디 중복검사를 해주세요.\");\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t</script></td>\n");
      out.write("\t\t\t\t<td></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t</form>\n");
      out.write("\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<div class=\"foot\" style=\"bottom: 0; position: absolute\">\n");
      out.write("\t\t<p>FoodTruck &nbsp;Copyright @ iei.or.kr &nbsp; All Rights\n");
      out.write("\t\t\tReserved.</p>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
